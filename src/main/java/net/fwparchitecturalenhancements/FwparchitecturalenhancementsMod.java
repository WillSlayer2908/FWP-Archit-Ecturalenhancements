/*
 *    MCreator note:
 *
 *    If you lock base mod element files, you can edit this file and the proxy files
 *    and they won't get overwritten. If you change your mod package or modid, you
 *    need to apply these changes to this file MANUALLY.
 *
 *    Settings in @Mod annotation WON'T be changed in case of the base mod element
 *    files lock too, so you need to set them manually here in such case.
 *
 *    Keep the ElementsFwparchitecturalenhancementsMod object in this class and all calls to this object
 *    INTACT in order to preserve functionality of mod elements generated by MCreator.
 *
 *    If you do not lock base mod element files in Workspace settings, this file
 *    will be REGENERATED on each build.
 *
 */
package net.fwparchitecturalenhancements;

import net.minecraft.block.Block;
import net.minecraft.item.Item;
import net.minecraftforge.client.event.ModelRegistryEvent;
import net.minecraftforge.common.MinecraftForge;
import net.minecraftforge.event.RegistryEvent;
import net.minecraftforge.fluids.FluidRegistry;
import net.minecraftforge.fml.common.Mod;
import net.minecraftforge.fml.common.SidedProxy;
import net.minecraftforge.fml.common.event.FMLInitializationEvent;
import net.minecraftforge.fml.common.event.FMLPostInitializationEvent;
import net.minecraftforge.fml.common.event.FMLPreInitializationEvent;
import net.minecraftforge.fml.common.event.FMLServerStartingEvent;
import net.minecraftforge.fml.common.eventhandler.SubscribeEvent;
import net.minecraftforge.fml.common.network.NetworkRegistry;
import net.minecraftforge.fml.common.network.simpleimpl.SimpleNetworkWrapper;
import net.minecraftforge.fml.common.registry.GameRegistry;
import net.minecraftforge.fml.relauncher.Side;
import net.minecraftforge.fml.relauncher.SideOnly;
import java.util.function.Supplier;

import org.apache.logging.log4j.Logger;

@Mod(modid = FwparchitecturalenhancementsMod.MODID, name = FwparchitecturalenhancementsMod.NAME ,version = FwparchitecturalenhancementsMod.VERSION)
    public class FwparchitecturalenhancementsMod extends CommonProxy{

    public static final String MODID = "fwparchitecturalenhancements";
    public static final String NAME = "FWP Architectural Enhancements";
    public static final String VERSION = "4.0.2";

    private static Logger logger;

    public static final SimpleNetworkWrapper PACKET_HANDLER = NetworkRegistry.INSTANCE.newSimpleChannel("fwparchitecturalen:a");

    @SidedProxy(clientSide = "net.fwparchitecturalenhancements.ClientProxy", serverSide = "net.mcreator.fwparchitecturalenhancements.ServerProxy")
    public static CommonProxy proxy;

    @Mod.Instance(MODID)
    public static FwparchitecturalenhancementsMod instance;

    static {
        FluidRegistry.enableUniversalBucket();
    }

    public static Elements elements = new Elements();

    @Mod.EventHandler
    public void preInitializationEvent(FMLPreInitializationEvent event) {
        logger = event.getModLog();
        MinecraftForge.EVENT_BUS.register(this);
        GameRegistry.registerWorldGenerator(elements, 5);
        GameRegistry.registerFuelHandler(elements);
        NetworkRegistry.INSTANCE.registerGuiHandler(this, new Elements.GuiHandler());
        elements.preInit(event);
        MinecraftForge.EVENT_BUS.register(elements);
        elements.getElements().forEach(element -> element.preInit(event));
        proxy.preInitializationEvent(event);
    }

    @Mod.EventHandler
    public void initializationEvent(FMLInitializationEvent event) {
        elements.getElements().forEach(element -> element.init(event));
        proxy.initializationEvent(event);
    }

    @Mod.EventHandler
    public void postInitializationEvent(FMLPostInitializationEvent event) {
        proxy.postInitializationEvent(event);
    }

    @Mod.EventHandler
    public void serverLoad(FMLServerStartingEvent event) {
        elements.getElements().forEach(element -> element.serverLoad(event));
        proxy.serverLoad(event);
    }

    @SubscribeEvent
    public void registerBlocks(RegistryEvent.Register<Block> event) {
        event.getRegistry().registerAll(elements.getBlocks().stream().map(Supplier::get).toArray(Block[]::new));
    }

    @SubscribeEvent
    public void registerItems(RegistryEvent.Register<Item> event) {
        event.getRegistry().registerAll(elements.getItems().stream().map(Supplier::get).toArray(Item[]::new));
    }

    @SubscribeEvent
    public void registerSounds(RegistryEvent.Register<net.minecraft.util.SoundEvent> event) {
        elements.registerSounds(event);
    }

    @SubscribeEvent
    @SideOnly(Side.CLIENT)
    public void registerModels(ModelRegistryEvent event) {
        elements.getElements().forEach(element -> element.registerModels(event));
    }
}
